# This is the Windows makefile for the Lua/APR binding.
#
# Author: Peter Odding <peter@peterodding.com>
# Last Change: February 5, 2011
# Homepage: http://peterodding.com/code/lua/apr/
# License: MIT
#
# This makefile has been tested on Windows XP with NMAKE from the free
# Microsoft Visual C++ 2010 Express tool chain.

# The directories where "lua.h" and "lua51.lib" can be found (these defaults
# are based on the directory structure used by Lua for Windows v5.1.4-40).
LUA_DIR = C:\Program Files\Lua\5.1
LUA_INCDIR = $(LUA_DIR)\include
LUA_LIBDIR = $(LUA_DIR)\clibs
LUA_LINKDIR = $(LUA_DIR)\lib
LUA_SHAREDIR = $(LUA_DIR)\lua

# The directories where "apr.h" and "libapr-1.lib" can be found.
APR_INCDIR = C:\lua-apr\apr\include
APR_LIBDIR = C:\lua-apr\apr\release

# The directories where "apu.h" and "libaprutil-1.lib" can be found.
APU_INCDIR = C:\lua-apr\apr-util\include
APU_LIBDIR = C:\lua-apr\apr-util\release

# The directory where "libapriconv-1.lib" can be found.
API_LIBDIR = C:\lua-apr\apr-iconv\release

# Compiler and linker flags.
CFLAGS = "/I$(LUA_INCDIR)" "/I$(APR_INCDIR)" "/I$(APU_INCDIR)" /D"_CRT_SECURE_NO_DEPRECATE"
LFLAGS = "/LIBPATH:$(LUA_LINKDIR)" lua51.lib "/LIBPATH:$(APR_LIBDIR)" libapr-1.lib "/LIBPATH:$(APU_LIBDIR)" libaprutil-1.lib

# Create debug builds by default but enable release builds
# using the command line "NMAKE /f Makefile.win RELEASE=1".
!IFNDEF RELEASE
CFLAGS = $(CFLAGS) /Zi /Fd"core.pdb" /DDEBUG
LFLAGS = $(LFLAGS) /debug
!ENDIF

# Names of compiled object files.
OBJECTS = src\base64.obj src\buffer.obj src\crypt.obj src\date.obj \
		  src\dbd.obj src\dbm.obj src\env.obj src\errno.obj src\filepath.obj \
		  src\fnmatch.obj src\io_dir.obj src\io_file.obj src\io_net.obj \
		  src\io_pipe.obj src\lua_apr.obj src\permissions.obj src\proc.obj \
		  src\refpool.obj src\stat.obj src\str.obj src\thread.obj \
		  src\time.obj src\uri.obj src\user.obj src\uuid.obj src\xlate.obj \
		  src\xml.obj

# Build rules.

core.dll: $(OBJECTS)
	LINK /nologo /dll /out:$@ /export:luaopen_apr_core $(OBJECTS) $(LFLAGS)
	IF EXIST $@.manifest MT -nologo -manifest $@.manifest -outputresource:$@;2

.c.obj:
	CL /W3 /nologo /MD /D"WIN32" /D"LUA_BUILD_AS_DLL" $(CFLAGS) /TC /c $< /Fo$@

src\errno.c: etc\errors.lua
	lua etc\errors.lua > src\errno.c.new && move src\errno.c.new src\errno.c

install: core.dll
	COPY src\apr.lua "$(LUA_SHAREDIR)"
	IF NOT EXIST "$(LUA_LIBDIR)\apr" MD "$(LUA_LIBDIR)\apr"
	COPY core.dll "$(LUA_LIBDIR)\apr"
	COPY "$(APR_LIBDIR)\libapr-1.dll" "$(LUA_DIR)"
	COPY "$(APU_LIBDIR)\libaprutil-1.dll" "$(LUA_DIR)"
	COPY "$(API_LIBDIR)\libapriconv-1.dll" "$(LUA_DIR)"

uninstall:
	DEL "$(LUA_SHAREDIR)\apr.lua"
	DEL "$(LUA_LIBDIR)\apr\core.dll"
	RD "$(LUA_LIBDIR)\apr"
	DEL "$(LUA_DIR)\libapr-1.dll"
	DEL "$(LUA_DIR)\libaprutil-1.dll"
	DEL "$(LUA_DIR)\libapriconv-1.dll"

test: install
	LUA etc\tests.lua

debug:
	NTSD -g lua etc\tests.lua

clean:
	DEL $(OBJECTS) core.dll core.lib core.exp core.pdb core.ilk 2>NUL

# vim: ts=4 sw=4
